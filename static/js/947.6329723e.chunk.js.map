{"version":3,"file":"static/js/947.6329723e.chunk.js","mappings":"yRACaA,EAAYC,EAAAA,EAAAA,IAAU,mHAMtBC,EAAOD,EAAAA,EAAAA,KAAW,kHACT,YAAQ,SAALE,MAAkBC,OAAOC,KAAK,IAK1CC,EAAOL,EAAAA,EAAAA,EAAQ,sFACjB,YAAQ,SAALE,MAAkBC,OAAOG,IAAI,IAK9BC,EAAQP,EAAAA,EAAAA,MAAY,oPAKX,YAAQ,SAALE,MAAkBC,OAAOG,IAAI,IAKlC,YAAQ,SAALJ,MAAkBC,OAAOK,MAAM,IAGzCC,EAAaT,EAAAA,EAAAA,EAAQ,qFAKrBU,EAASV,EAAAA,EAAAA,OAAa,waAMb,YAAQ,SAALE,MAAkBC,OAAOK,MAAM,IAC7C,YAAQ,SAALN,MAAkBC,OAAOC,KAAK,IAQpB,YAAQ,SAALF,MAAkBC,OAAOG,IAAI,I,SCtCzC,SAASK,IAAa,IAAD,IAC5BC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,MACNC,cAAe,CACbC,KAAM,GACNC,MAAO,MARTC,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACAC,EAAK,EAALA,MACaC,EAAM,EAAnBC,UAAaD,OAiBf,OACE,8BACE,SAAC1B,EAAS,WACR,UAACE,EAAI,CAAC0B,SAAUJ,GAXE,SAAAK,GACtBhB,GAASiB,EAAAA,EAAAA,IAAMD,IACZE,SACAC,MAAK,gBAAGC,EAAI,EAAJA,KAAI,OAAOC,EAAAA,GAAAA,QAAc,gBAAD,OAAiBD,EAAKZ,MAAO,IAC7Dc,OAAM,kBAAMD,EAAAA,GAAAA,MAAY,yCAAyC,IAEpET,GACF,IAIoD,WAC5C,SAACnB,EAAI,UAAC,YACN,SAACE,GAAK,gBACJ4B,KAAK,QACDb,EAAS,QAAS,CACpBc,SAAU,oBACVC,QAAS,CACPC,MAAO,4CACPC,QAAS,4BAEX,IACFC,YAAY,YAEd,SAAC/B,EAAU,UAAc,QAAd,EAAEgB,EAAOJ,aAAK,aAAZ,EAAckB,WAE3B,SAAChC,GAAK,gBACJ4B,KAAK,YACDb,EAAS,WAAY,CACvBc,SAAU,uBACVC,QAAS,CACPC,MACE,6DACFC,QACE,qIAEJ,IACFC,YAAY,eAEd,SAAC/B,EAAU,UAAiB,QAAjB,EAAEgB,EAAOgB,gBAAQ,aAAf,EAAiBF,WAE9B,SAAC7B,EAAM,CAACgC,SAAU5B,GAA4C,IAA/B6B,OAAOC,KAAKnB,GAAQoB,OAAa,SAAC,iBAO3E,CC7Ee,SAASC,IACtB,OAAO,SAACnC,EAAS,GACnB,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 60px;\n`;\nexport const Form = styled.form`\n  background-color: ${({ theme }) => theme.colors.white};\n  padding: 40px 40px;\n  width: 500px;\n  border-radius: 12px;\n`;\nexport const Text = styled.p`\n  color: ${({ theme }) => theme.colors.grey};\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  border-radius: 8px;\n  width: 420px;\n  height: 50px;\n  border: 1px solid ${({ theme }) => theme.colors.grey};\n  padding: 4px 12px;\n  font-size: 16px;\n  &:focus {\n    outline: transparent;\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\nexport const Validation = styled.p`\n  margin-bottom: 24px;\n  color: red;\n  text-align: start;\n`;\nexport const Button = styled.button`\n  width: 420px;\n  height: 50px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.colors.accent};\n  color: ${({ theme }) => theme.colors.white};\n  font-size: 16px;\n  box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  &:hover,\n  &:focus {\n    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  }\n  &:disabled {\n    background-color: ${({ theme }) => theme.colors.grey};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useForm } from 'react-hook-form';\nimport { logIn } from 'redux/authentification/operations';\nimport { selectIsLoading } from 'redux/authentification/selectors';\nimport {\n  Form,\n  Input,\n  Validation,\n  Button,\n  Text,\n  Container,\n} from './LoginForm.styled';\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    mode: 'all',\n    defaultValues: {\n      name: '',\n      email: '',\n    },\n  });\n\n  const onSubmitHandler = data => {\n    dispatch(logIn(data))\n      .unwrap()\n      .then(({ user }) => toast.success(`Welcome back ${user.name}`))\n      .catch(() => toast.error('Something went wrong. Please try again'));\n\n    reset();\n  };\n  return (\n    <section>\n      <Container>\n        <Form onSubmit={handleSubmit(onSubmitHandler)}>\n          <Text>Log in</Text>\n          <Input\n            type=\"text\"\n            {...register('email', {\n              required: 'Email is required',\n              pattern: {\n                value: /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/,\n                message: 'Invalid type of email',\n              },\n            })}\n            placeholder=\"Email\"\n          />\n          <Validation>{errors.email?.message}</Validation>\n\n          <Input\n            type=\"password\"\n            {...register('password', {\n              required: 'Password is required',\n              pattern: {\n                value:\n                  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#%&])(?=.{8,16})/,\n                message:\n                  'Invalid type of password ( password must be at least of 8 characters including number, upper, lower and one special character)',\n              },\n            })}\n            placeholder=\"Password\"\n          />\n          <Validation>{errors.password?.message}</Validation>\n\n          <Button disabled={isLoading || Object.keys(errors).length !== 0}>\n            Log in\n          </Button>\n        </Form>\n      </Container>\n    </section>\n  );\n}\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nexport default function LoginPage() {\n  return <LoginForm />;\n}\n"],"names":["Container","styled","Form","theme","colors","white","Text","grey","Input","accent","Validation","Button","LoginForm","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","useForm","mode","defaultValues","name","email","register","handleSubmit","reset","errors","formState","onSubmit","data","logIn","unwrap","then","user","toast","catch","type","required","pattern","value","message","placeholder","password","disabled","Object","keys","length","LoginPage"],"sourceRoot":""}